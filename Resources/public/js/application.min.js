jQuery.extend({
    venne: {
        getBasePath: function() {
            return void 0 !== $("body").attr("data-venne-basepath") ? $("body").attr("data-venne-basepath") : "";
        }
    }
}), $(function() {
    $("#create-new").on("click", function() {
        $(this).next().click();
    }), $("#panel .panel-container").css("max-height", $(window).height() - 155 + "px"), 
    $(window).on("resize", function() {
        $("#panel .panel-container").css("max-height", $(this).height() - 155 + "px");
    }), $("#button-fullscreen").on("click", function(a) {
        "closed" != $("#panel").data("state") ? (a.preventDefault(), $("#panel").animate({
            marginLeft: "-300px"
        }, 300).data("state", "closed"), $("#content").animate({
            marginLeft: "10px"
        }, 300)) : (a.preventDefault(), $("#panel").animate({
            marginLeft: "0px"
        }, 300).data("state", null), $("#content").animate({
            marginLeft: "310px"
        }, 300));
    }), $.nette.ext("removeDoubleModalBackground", {
        load: function() {
            var a = $(".modal-backdrop").length;
            $(".modal-backdrop").each(function(b) {
                a - 1 > b && $(this).remove();
            });
        }
    }), $.nette.ext("data-ajax-confirm", {
        before: function(a, b) {
            if (void 0 !== b.nette && void 0 !== b.nette.el) {
                var c = b.nette.el.data("confirm");
                if (c) return confirm(c);
            }
        }
    }), $.nette.ext("formsValidationBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("formsValidationBind") || ($(this).data("formsValidationBind", !0), 
                Nette.initForm(this));
            });
        },
        selector: "form"
    }), $.nette.ext("tooltipBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("ajaxTooltipCreated") || ($(this).data("ajaxTooltipCreated", !0), $(this).tooltip({
                    html: !0
                }));
            });
        },
        selector: "[data-toggle='tooltip']"
    }), $.nette.ext("formsMultiSelectBind", {
        load: function() {
            this.init($("body"));
        },
        success: function(a) {
            if (a.snippets) {
                var b = this;
                for (var c in a.snippets) $("#" + c).each(function() {
                    b.init($(this));
                });
            }
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                if (!$(this).data("formsMultiSelectBind")) {
                    $(this).data("formsMultiSelectBind", !0);
                    var a = {
                        width: "resolve"
                    };
                    if (void 0 !== $(this).attr("data-tag-suggest") && (a.createSearchChoice = function(a, b) {
                        return 0 === $(b).filter(function() {
                            return 0 === this.text.localeCompare(a);
                        }).length ? {
                            id: a,
                            text: a
                        } : void 0;
                    }, a.initSelection = function(a, b) {
                        var c = [];
                        $(a.val().split($(a).attr("data-tag-joiner"))).each(function() {
                            c.push({
                                id: this,
                                text: this
                            });
                        }), b(c);
                    }, a.ajax = {
                        url: $(this).attr("data-tag-suggest"),
                        dataType: "json",
                        results: function(a) {
                            var b = [];
                            return $.each(a.results, function(a, c) {
                                b.push({
                                    id: a,
                                    text: c
                                });
                            }), {
                                results: b
                            };
                        },
                        data: function(a) {
                            return {
                                q: a
                            };
                        }
                    }), void 0 !== $(this).attr("data-tag-joiner")) {
                        {
                            jQuery.parseJSON($(this).attr("data-tags"));
                        }
                        a.tags = !0, a.separator = $(this).attr("data-tag-joiner");
                    }
                    $(this).select2(a);
                }
            });
        },
        selector: "select[multiple], input[data-tag-joiner]"
    }), $.nette.ext("formsDateInputBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                if (!$(this).data("formsDateInputBind")) {
                    $(this).data("formsDateInputBind", !0);
                    var a = $(this);
                    a.wrap('<div class="input-group date" id="datetimepicker-' + $(this).attr("id") + '" />').after('<span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>').parent("div"), 
                    $("#datetimepicker-" + $(this).attr("id")).datetimepicker({
                        format: "yyyy-MM-dd hh:mm:ss"
                    });
                }
            });
        },
        selector: "input[type=date], input[type=datetime]"
    }), $.nette.ext("grido", {
        load: function() {
            this.selector = $(".grido"), this.selector.grido();
        },
        success: function(a) {
            this.selector.trigger("success.ajax.grido", a), $("html, body").animate({
                scrollTop: 0
            }, 400);
        }
    }), $.nette.ext("formsFileUpload", {
        load: function() {
            this.init("body");
        }
    }, {
        init: function(a) {
            var b = function(a) {
                a.change(function() {
                    var b = $(this).val();
                    if (b) {
                        var b = '<i class="glyphicon glyphicon-file"></i> ' + b;
                        $("#" + a.attr("id") + "_fake").html(b.replace("C:\\fakepath\\", "")), $("#" + a.attr("id") + "_fakeRemove").show(), 
                        $("#" + a.attr("id") + "_fakeButton").text("Change");
                    } else $("#" + a.attr("id") + "_fake").html(b), $("#" + a.attr("id") + "_fakeRemove").hide(), 
                    $("#" + a.attr("id") + "_fakeButton").text("Select file");
                });
            };
            $(a).find('input[type="file"]').each(function() {
                if (!$(this).data("formsFileUpload")) {
                    $(this).data("formsFileUpload", !0);
                    var a = $(this);
                    $(this).after('<div class="input-group"><div class="form-control input-sm" id="' + $(this).attr("id") + '_fake" type="text" disabled></div><div class="input-group-btn btn-group"><button class="btn btn-default btn-sm hide" id="' + $(this).attr("id") + '_fakeRemove" type="button">Remove</button><button class="btn btn-default btn-sm" id="' + $(this).attr("id") + '_fakeButton" type="button">Select file</button></div></div>'), 
                    $("#" + $(this).attr("id") + "_fakeButton").off("click"), $("#" + $(this).attr("id") + "_fakeRemove").off("click"), 
                    $("#" + $(this).attr("id") + "_fakeButton").on("click", function() {
                        a.click();
                    }), $("#" + $(this).attr("id") + "_fakeRemove").on("click", function() {
                        a.replaceWith(a.clone()), $("#" + a.attr("id") + "_fake").html(""), $("#" + a.attr("id") + "_fakeRemove").hide(), 
                        $("#" + a.attr("id") + "_fakeButton").text("Select file"), b(a);
                    }), b($(this)), $(this).hide();
                }
            });
        }
    }), $.nette.ext("bootstrapModalBind", {
        init: function() {
            this.resize(), $(window).bind("resize", this.resize);
        },
        success: function() {
            this.resize();
        }
    }, {
        resize: function() {
            $(".modal.modal-full .modal-body").css("max-height", $(window).height() - 120);
        }
    }), $.nette.ext("textWithSelectBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("textWithSelectBind") || ($(this).data("textWithSelectBind", !0), $(this).textWithSelect());
            });
        },
        selector: "form .input-group-btn"
    }), $.nette.init(), $("a[data-confirm], button[data-confirm], input[data-confirm]").on("click", function(a) {
        var b = $(this);
        return b.triggerAndReturn("confirm") && !confirm(b.attr("data-confirm")) ? (a.preventDefault(), 
        a.stopImmediatePropagation(), !1) : void 0;
    });
}), jQuery.extend({
    venne: {
        getBasePath: function() {
            return void 0 !== $("body").attr("data-venne-basepath") ? $("body").attr("data-venne-basepath") : "";
        }
    }
}), $(function() {
    $("#create-new").on("click", function() {
        $(this).next().click();
    }), $("#panel .panel-container").css("max-height", $(window).height() - 155 + "px"), 
    $(window).on("resize", function() {
        $("#panel .panel-container").css("max-height", $(this).height() - 155 + "px");
    }), $("#button-fullscreen").on("click", function(a) {
        "closed" != $("#panel").data("state") ? (a.preventDefault(), $("#panel").animate({
            marginLeft: "-300px"
        }, 300).data("state", "closed"), $("#content").animate({
            marginLeft: "10px"
        }, 300)) : (a.preventDefault(), $("#panel").animate({
            marginLeft: "0px"
        }, 300).data("state", null), $("#content").animate({
            marginLeft: "310px"
        }, 300));
    }), $.nette.ext("removeDoubleModalBackground", {
        load: function() {
            var a = $(".modal-backdrop").length;
            $(".modal-backdrop").each(function(b) {
                a - 1 > b && $(this).remove();
            });
        }
    }), $.nette.ext("data-ajax-confirm", {
        before: function(a, b) {
            if (void 0 !== b.nette && void 0 !== b.nette.el) {
                var c = b.nette.el.data("confirm");
                if (c) return confirm(c);
            }
        }
    }), $.nette.ext("formsValidationBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("formsValidationBind") || ($(this).data("formsValidationBind", !0), 
                Nette.initForm(this));
            });
        },
        selector: "form"
    }), $.nette.ext("tooltipBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("ajaxTooltipCreated") || ($(this).data("ajaxTooltipCreated", !0), $(this).tooltip({
                    html: !0
                }));
            });
        },
        selector: "[data-toggle='tooltip']"
    }), $.nette.ext("formsMultiSelectBind", {
        load: function() {
            this.init($("body"));
        },
        success: function(a) {
            if (a.snippets) {
                var b = this;
                for (var c in a.snippets) $("#" + c).each(function() {
                    b.init($(this));
                });
            }
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                if (!$(this).data("formsMultiSelectBind")) {
                    $(this).data("formsMultiSelectBind", !0);
                    var a = {
                        width: "resolve"
                    };
                    void 0 !== $(this).attr("data-tag-suggest") && (a.createSearchChoice = function(a, b) {
                        return 0 === $(b).filter(function() {
                            return 0 === this.text.localeCompare(a);
                        }).length ? {
                            id: a,
                            text: a
                        } : void 0;
                    }, a.initSelection = function(a, b) {
                        var c = [];
                        $(a.val().split($(a).attr("data-tag-joiner"))).each(function() {
                            c.push({
                                id: this,
                                text: this
                            });
                        }), b(c);
                    }, a.ajax = {
                        url: $(this).attr("data-tag-suggest"),
                        dataType: "json",
                        results: function(a) {
                            var b = [];
                            return $.each(a.results, function(a, c) {
                                b.push({
                                    id: a,
                                    text: c
                                });
                            }), {
                                results: b
                            };
                        },
                        data: function(a) {
                            return {
                                q: a
                            };
                        }
                    }), void 0 !== $(this).attr("data-tag-joiner") && (jQuery.parseJSON($(this).attr("data-tags")), 
                    a.tags = !0, a.separator = $(this).attr("data-tag-joiner")), $(this).select2(a);
                }
            });
        },
        selector: "select[multiple], input[data-tag-joiner]"
    }), $.nette.ext("formsDateInputBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                if (!$(this).data("formsDateInputBind")) {
                    $(this).data("formsDateInputBind", !0);
                    var a = $(this);
                    a.wrap('<div class="input-group date" id="datetimepicker-' + $(this).attr("id") + '" />').after('<span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>').parent("div"), 
                    $("#datetimepicker-" + $(this).attr("id")).datetimepicker({
                        format: "yyyy-MM-dd hh:mm:ss"
                    });
                }
            });
        },
        selector: "input[type=date], input[type=datetime]"
    }), $.nette.ext("grido", {
        load: function() {
            this.selector = $(".grido"), this.selector.grido();
        },
        success: function(a) {
            this.selector.trigger("success.ajax.grido", a), $("html, body").animate({
                scrollTop: 0
            }, 400);
        }
    }), $.nette.ext("formsFileUpload", {
        load: function() {
            this.init("body");
        }
    }, {
        init: function(a) {
            var b = function(a) {
                a.change(function() {
                    var b = $(this).val();
                    if (b) {
                        var b = '<i class="glyphicon glyphicon-file"></i> ' + b;
                        $("#" + a.attr("id") + "_fake").html(b.replace("C:\\fakepath\\", "")), $("#" + a.attr("id") + "_fakeRemove").show(), 
                        $("#" + a.attr("id") + "_fakeButton").text("Change");
                    } else $("#" + a.attr("id") + "_fake").html(b), $("#" + a.attr("id") + "_fakeRemove").hide(), 
                    $("#" + a.attr("id") + "_fakeButton").text("Select file");
                });
            };
            $(a).find('input[type="file"]').each(function() {
                if (!$(this).data("formsFileUpload")) {
                    $(this).data("formsFileUpload", !0);
                    var a = $(this);
                    $(this).after('<div class="input-group"><div class="form-control input-sm" id="' + $(this).attr("id") + '_fake" type="text" disabled></div><div class="input-group-btn btn-group"><button class="btn btn-default btn-sm hide" id="' + $(this).attr("id") + '_fakeRemove" type="button">Remove</button><button class="btn btn-default btn-sm" id="' + $(this).attr("id") + '_fakeButton" type="button">Select file</button></div></div>'), 
                    $("#" + $(this).attr("id") + "_fakeButton").off("click"), $("#" + $(this).attr("id") + "_fakeRemove").off("click"), 
                    $("#" + $(this).attr("id") + "_fakeButton").on("click", function() {
                        a.click();
                    }), $("#" + $(this).attr("id") + "_fakeRemove").on("click", function() {
                        a.replaceWith(a.clone()), $("#" + a.attr("id") + "_fake").html(""), $("#" + a.attr("id") + "_fakeRemove").hide(), 
                        $("#" + a.attr("id") + "_fakeButton").text("Select file"), b(a);
                    }), b($(this)), $(this).hide();
                }
            });
        }
    }), $.nette.ext("bootstrapModalBind", {
        init: function() {
            this.resize(), $(window).bind("resize", this.resize);
        },
        success: function() {
            this.resize();
        }
    }, {
        resize: function() {
            $(".modal.modal-full .modal-body").css("max-height", $(window).height() - 120);
        }
    }), $.nette.ext("textWithSelectBind", {
        load: function() {
            this.init($("body"));
        }
    }, {
        init: function(a) {
            a.find(this.selector).each(function() {
                $(this).data("textWithSelectBind") || ($(this).data("textWithSelectBind", !0), $(this).textWithSelect());
            });
        },
        selector: "form .input-group-btn"
    }), $.nette.init(), $("a[data-confirm], button[data-confirm], input[data-confirm]").on("click", function(a) {
        var b = $(this);
        return b.triggerAndReturn("confirm") && !confirm(b.attr("data-confirm")) ? (a.preventDefault(), 
        a.stopImmediatePropagation(), !1) : void 0;
    });
}), function(a, b, c, d) {
    "use strict";
    c.Grid.prototype.onInit = function() {
        this.initDatepicker(), this.initSuggest();
    }, c.Grid.prototype.initDatepicker = function() {
        var b = this;
        this.$element.on("focus", "input.date", function() {
            a.fn.mask === d ? console.error('Plugin "jquery.maskedinput.js" is missing!') : a(this).mask(b.options.datepicker.mask), 
            a.fn.datepicker === d ? console.error('Plugin "bootstrap-datepicker.js" is missing!') : a(this).datepicker({
                format: b.options.datepicker.format
            });
        });
    }, c.Grid.prototype.initSuggest = function() {
        if (a.fn.typeahead === d) return void console.error('Plugin "typeahead.js" is missing!');
        var b = this;
        this.$element.find("input.suggest").each(function() {
            var c = a(this).data("grido-suggest-limit"), d = a(this).data("grido-suggest-handler"), e = a(this).data("grido-suggest-replacement");
            a(this).typeahead({
                limit: c,
                highlight: !0,
                remote: {
                    url: d,
                    wildcard: e
                }
            }), a(this).on("typeahead:selected", function() {
                return b.sendFilterForm(), !1;
            });
        }), this.$element.on("keyup", "input.suggest", function(a) {
            var c = a.keyCode || a.which;
            return 13 === c ? (a.stopPropagation(), a.preventDefault(), b.sendFilterForm(), 
            !1) : void 0;
        });
    }, c.Ajax.prototype.registerHashChangeEvent = function() {
        a.fn.hashchange === d ? console.error('Plugin "jquery.hashchange.js" is missing!') : a(b).hashchange(a.proxy(this.handleHashChangeEvent, this)), 
        this.handleHashChangeEvent();
    }, c.Ajax.prototype.doRequest = function(b) {
        a.fn.netteAjax === d ? (console.error('Plugin "nette.ajax.js" is missing!'), a.get(b)) : a.nette.ajax({
            url: b
        });
    };
}(jQuery, window, window.Grido), $(function() {
    function a() {
        var a = g.slice(0);
        for (d(), i = 0; i < a.length; i++) b(a[i]);
    }
    function b(a) {
        g[g.length] = a, $(a, e).each(function() {
            var a = $(this), b = jQuery.parseJSON($(this).data("venne-element-buttons").replace(/'/g, '"')), d = $(this).offset(), e = $(this).height(), f = $(this).width(), g = d.top - $(window.parent).scrollTop(), h = d.left - $(window.parent).scrollLeft(), i = '<div class="btn-group"><a class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" href="#">Edit <span class="caret"></span></a><ul class="dropdown-menu">';
            $.each(b, function(b, c) {
                i += '<li><a href="?mode=1&do=element&elementName=' + a.data("venne-element-name") + "&elementView=" + b + "&elementId=" + a.data("venne-element-id") + "&elementRouteId=" + a.data("venne-element-route") + "&elementLanguageId=" + a.data("venne-element-language") + '" target="_self" class="ajax" type="button">' + c + "</a></li>";
            }), i += "</ul></div>", c(f, e, h, g, i);
        }), $.nette.load();
    }
    function c(a, b, c, d, e) {
        var g = $("<div>", {
            id: "rectangle_" + f.length,
            "class": "venne-panel-block",
            style: "top: " + d + "px; left: " + c + "px; width: " + a + "px; height: " + b + "px;",
            html: e
        });
        return g.appendTo("body"), f[f.length] = g, g;
    }
    function d() {
        var a;
        for (i = 0; i < f.length; i++) a = f[i], a.remove();
        f.length = 0, g.length = 0;
    }
    var e = top.document, f = new Array(), g = new Array(), h = !1;
    $("div").on("mouseover", function() {
        h || $("#venne-panel-container", e).height("100%");
    }), $("div").on("mouseout", function() {
        h || $("#venne-panel-container", e).height("43px");
    }), $("a").attr("target", "_parent"), $("form").attr("target", "_parent"), $("#venne-panel-button-save").hide(), 
    $("#venne-panel-button-edit").on("click", function() {
        $("#venne-panel-container", e).height("100%"), $("body").css("background-color", "rgba(255, 255, 255, 0.5)"), 
        b(".venne-element-container"), $("#venne-panel-button-save").show(), $(this).hide(), 
        h = !0, window.parent._venne_panel_button = "edit";
    }), $("#venne-panel-button-save").on("click", function() {
        $("#venne-panel-container", e).height("42px"), $("body").css("background-color", "transparent"), 
        d(), $("#venne-panel-button-edit").show(), $(this).hide(), h = !1, window.parent._venne_panel_button = "save";
    }), void 0 !== window.parent._venne_panel_button && $("#venne-panel-button-" + window.parent._venne_panel_button).click(), 
    $("#venne-panel-button-close").on("click", function() {
        window.top.location.href = -1 != window.parent.location.href.indexOf("?") ? window.parent.location.href + "&do=closePanel" : window.parent.location.href + "?do=closePanel";
    }), $(window.parent).scroll(function() {
        a();
    }), $(window.parent).resize(function() {
        a();
    }), window.redrawRectangles = a;
}), function(a, b) {
    a.nette.ext("spinner", {
        init: function() {
            this.spinner = this.createSpinner(), this.spinner.appendTo("body");
        },
        before: function() {},
        start: function() {
            this.spinner.show(this.speed), this.spinner.css("opacity", "1"), this.spinner.css("width", "0%"), 
            this.spinner.animate({
                width: "90%"
            });
        },
        complete: function() {
            this.spinner.animate({
                width: "100%"
            }, 50).animate({
                opacity: "0"
            });
        }
    }, {
        createSpinner: function() {
            return a("<div>", {
                id: "ajax-spinner",
                style: "display: none;"
            });
        },
        spinner: null,
        speed: b
    });
}(jQuery), function(a, b, c, d) {
    "use strict";
    c.Grid.prototype.onInit = function() {
        this.initDatepicker(), this.initSuggest();
    }, c.Grid.prototype.initDatepicker = function() {
        var b = this;
        this.$element.on("focus", "input.date", function() {
            a.fn.mask === d ? console.error('Plugin "jquery.maskedinput.js" is missing!') : a(this).mask(b.options.datepicker.mask), 
            a.fn.datepicker === d ? console.error('Plugin "bootstrap-datepicker.js" is missing!') : a(this).datepicker({
                format: b.options.datepicker.format
            });
        });
    }, c.Grid.prototype.initSuggest = function() {
        if (a.fn.typeahead === d) return void console.error('Plugin "typeahead.js" is missing!');
        var b = this;
        this.$element.find("input.suggest").each(function() {
            var c = a(this).data("grido-suggest-limit"), d = a(this).data("grido-suggest-handler"), e = a(this).data("grido-suggest-replacement");
            a(this).typeahead({
                limit: c,
                highlight: !0,
                remote: {
                    url: d,
                    wildcard: e
                }
            }), a(this).on("typeahead:selected", function() {
                return b.sendFilterForm(), !1;
            });
        }), this.$element.on("keyup", "input.suggest", function(a) {
            var c = a.keyCode || a.which;
            return 13 === c ? (a.stopPropagation(), a.preventDefault(), b.sendFilterForm(), 
            !1) : void 0;
        });
    }, c.Ajax.prototype.registerHashChangeEvent = function() {
        a.fn.hashchange === d ? console.error('Plugin "jquery.hashchange.js" is missing!') : a(b).hashchange(a.proxy(this.handleHashChangeEvent, this)), 
        this.handleHashChangeEvent();
    }, c.Ajax.prototype.doRequest = function(b) {
        a.fn.netteAjax === d ? (console.error('Plugin "nette.ajax.js" is missing!'), a.get(b)) : a.nette.ajax({
            url: b
        });
    };
}(jQuery, window, window.Grido), $(function() {
    function a() {
        var a = g.slice(0);
        for (d(), i = 0; i < a.length; i++) b(a[i]);
    }
    function b(a) {
        g[g.length] = a, $(a, e).each(function() {
            var a = $(this), b = jQuery.parseJSON($(this).data("venne-element-buttons").replace(/'/g, '"')), d = $(this).offset(), e = $(this).height(), f = $(this).width(), g = d.top - $(window.parent).scrollTop(), h = d.left - $(window.parent).scrollLeft(), i = '<div class="btn-group"><a class="btn btn-default btn-xs dropdown-toggle" data-toggle="dropdown" href="#">Edit <span class="caret"></span></a><ul class="dropdown-menu">';
            $.each(b, function(b, c) {
                i += '<li><a href="?mode=1&do=element&elementName=' + a.data("venne-element-name") + "&elementView=" + b + "&elementId=" + a.data("venne-element-id") + "&elementRouteId=" + a.data("venne-element-route") + "&elementLanguageId=" + a.data("venne-element-language") + '" target="_self" class="ajax" type="button">' + c + "</a></li>";
            }), i += "</ul></div>", c(f, e, h, g, i);
        }), $.nette.load();
    }
    function c(a, b, c, d, e) {
        var g = $("<div>", {
            id: "rectangle_" + f.length,
            "class": "venne-panel-block",
            style: "top: " + d + "px; left: " + c + "px; width: " + a + "px; height: " + b + "px;",
            html: e
        });
        return g.appendTo("body"), f[f.length] = g, g;
    }
    function d() {
        var a;
        for (i = 0; i < f.length; i++) a = f[i], a.remove();
        f.length = 0, g.length = 0;
    }
    var e = top.document, f = new Array(), g = new Array(), h = !1;
    $("div").on("mouseover", function() {
        h || $("#venne-panel-container", e).height("100%");
    }), $("div").on("mouseout", function() {
        h || $("#venne-panel-container", e).height("43px");
    }), $("a").attr("target", "_parent"), $("form").attr("target", "_parent"), $("#venne-panel-button-save").hide(), 
    $("#venne-panel-button-edit").on("click", function() {
        $("#venne-panel-container", e).height("100%"), $("body").css("background-color", "rgba(255, 255, 255, 0.5)"), 
        b(".venne-element-container"), $("#venne-panel-button-save").show(), $(this).hide(), 
        h = !0, window.parent._venne_panel_button = "edit";
    }), $("#venne-panel-button-save").on("click", function() {
        $("#venne-panel-container", e).height("42px"), $("body").css("background-color", "transparent"), 
        d(), $("#venne-panel-button-edit").show(), $(this).hide(), h = !1, window.parent._venne_panel_button = "save";
    }), void 0 !== window.parent._venne_panel_button && $("#venne-panel-button-" + window.parent._venne_panel_button).click(), 
    $("#venne-panel-button-close").on("click", function() {
        window.top.location.href = -1 != window.parent.location.href.indexOf("?") ? window.parent.location.href + "&do=closePanel" : window.parent.location.href + "?do=closePanel";
    }), $(window.parent).scroll(function() {
        a();
    }), $(window.parent).resize(function() {
        a();
    }), window.redrawRectangles = a;
}), function(a, b) {
    a.nette.ext("spinner", {
        init: function() {
            this.spinner = this.createSpinner(), this.spinner.appendTo("body");
        },
        before: function() {},
        start: function() {
            this.spinner.show(this.speed), this.spinner.css("opacity", "1"), this.spinner.css("width", "0%"), 
            this.spinner.animate({
                width: "90%"
            });
        },
        complete: function() {
            this.spinner.animate({
                width: "100%"
            }, 50).animate({
                opacity: "0"
            });
        }
    }, {
        createSpinner: function() {
            return a("<div>", {
                id: "ajax-spinner",
                style: "display: none;"
            });
        },
        spinner: null,
        speed: b
    });
}(jQuery);